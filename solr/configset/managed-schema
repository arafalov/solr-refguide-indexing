<?xml version="1.0" encoding="UTF-8"?>
<schema name="smallest-config" version="1.6">

    <field name="id" type="string" required="true" indexed="true" stored="true" />
    <field name="_text_" type="text_basic" multiValued="true" indexed="true" stored="false" docValues="false"/>
    <field name="text" type="text_basic" multiValued="true" indexed="true" stored="true"/>
    <field name="hasText" type="boolean" indexed="true" stored="true"/>

    <field name="classnames" multiValued="true" type="text_classname" indexed="true"/>
    <copyField source="text" dest="classnames"/>

    <dynamicField name="*" type="text_basic" indexed="true" stored="true"/>

    <copyField source="*" dest="_text_"/>

    <uniqueKey>id</uniqueKey>

    <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true"/>

    <fieldType name="text_basic" class="solr.SortableTextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.WordDelimiterGraphFilterFactory" preserveOriginal="1" generateWordParts="1"
                    generateNumberParts="0" splitOnCaseChange="0" splitOnNumerics="0"/>
            <filter class="solr.FlattenGraphFilterFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.WordDelimiterGraphFilterFactory" preserveOriginal="1" generateWordParts="1"
                    generateNumberParts="0" splitOnCaseChange="1" splitOnNumerics="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="text_classname" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <!--
                Use fancy negative lookahead to match PascalCase class tokens, with optional preceding package names
                - solr.LowerCaseFilterFactory (signal: compulsory leading package and First upper character)
                - java.util.List
                - and without packages LinkedList (signal: optional leading package and PascalCase)
                - but not List (would match too many random words)
                And then we remove leading package names (if any), leaving only the class name itself.
             -->
            <filter class="solr.PatternReplaceFilterFactory" pattern="^(\w+\.)+[A-Z]\w+$" replacement="#KEEP#$0"/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^(\w+\.)*[A-Z]\w+[A-Z]\w+[a-z0-9]$" replacement="#KEEP#$0"/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^(?!#KEEP#).*$" replacement=""/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^#KEEP#" replacement=""/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^(\w+\.)*" replacement=""/>
            <filter class="solr.LengthFilterFactory" min="4" max="30"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
</schema>
