<?xml version="1.0" encoding="UTF-8"?>
<schema name="smallest-config" version="1.6">

    <field name="id" type="string" required="true" indexed="true" stored="true" />
    <field name="_version_" type="plong" indexed="false" stored="false"/>

    <field name="_root_" type="string" indexed="true" stored="false" docValues="false" />
    <fieldType name="_nest_path_" class="solr.NestPathField" />
    <field name="_nest_path_" type="_nest_path_" />
    <field name="_nest_parent_" type="string" indexed="true" stored="true"/>

    <field name="_text_" type="text_basic" multiValued="true" indexed="true" stored="false" docValues="false"/>
    <field name="text" type="text_basic" multiValued="true" indexed="true" stored="true"/>
    <field name="hasText" type="boolean" indexed="true" stored="true"/>
    <field name="isDocumentRoot" type="boolean" indexed="true" stored="true"/>
    <field name="level" type="pint" indexed="false" stored="true"/>
    <field name="path" type="text_unbroken" indexed="true" stored="true" multiValued="true"/>
    <field name="fileName" type="string" indexed="false" stored="true" docValues="true"/>
    <field name="anchor" type="string" indexed="false" stored="true"/>
    <field name="childenCount" type="pint" indexed="true" stored="true"/>

    <field name="classnames" multiValued="true" type="text_classname" indexed="true" stored="false"/>
    <copyField source="text" dest="classnames"/>

    <dynamicField name="*" type="text_basic" indexed="true" stored="true"/>

    <copyField source="*" dest="_text_"/>

    <uniqueKey>id</uniqueKey>


    <fieldType name="string" class="solr.StrField" sortMissingLast="true" docValues="true"/>
    <fieldType name="pint" class="solr.IntPointField" docValues="true"/>
    <fieldType name="plong" class="solr.LongPointField" docValues="true"/>

    <fieldType name="text_basic" class="solr.TextField" positionIncrementGap="100">
        <analyzer>
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.EnglishPossessiveFilterFactory"/>
            <filter class="solr.EnglishMinimalStemFilterFactory"/>
        </analyzer>
    </fieldType>

    <!--
        Recognize that multi-valued fields here are actually related and allow them to be joined
         with a small enough slop/distance
     -->
    <fieldType name="text_unbroken" class="solr.TextField" positionIncrementGap="3">
        <analyzer>
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.EnglishPossessiveFilterFactory"/>
            <filter class="solr.EnglishMinimalStemFilterFactory"/>
        </analyzer>
    </fieldType>



    <fieldType name="text_classname" class="solr.TextField" positionIncrementGap="100">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <!--
                Use fancy negative lookahead to match PascalCase class tokens, with optional preceding package names
                - solr.LowerCaseFilterFactory (signal: compulsory leading package and First upper character)
                - java.util.List
                - and without packages LinkedList (signal: optional leading package and PascalCase)
                - but not List (would match too many random words)
                And then we remove leading package names (if any), leaving only the class name itself.
             -->
            <filter class="solr.PatternReplaceFilterFactory" pattern="^(\w+\.)+[A-Z]\w+$" replacement="#KEEP#$0"/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^(\w+\.)*[A-Z]\w+[A-Z]\w+[a-z0-9]$" replacement="#KEEP#$0"/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^(?!#KEEP#).*$" replacement=""/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^#KEEP#" replacement=""/>
            <filter class="solr.PatternReplaceFilterFactory" pattern="^(\w+\.)*" replacement=""/>
            <filter class="solr.LengthFilterFactory" min="4" max="60"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
        </analyzer>
    </fieldType>

    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
</schema>
